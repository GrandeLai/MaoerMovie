// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.13.0
// source: cinema.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CinemaListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId    string `protobuf:"bytes,1,opt,name=brandId,proto3" json:"brandId,omitempty"`
	HallType   string `protobuf:"bytes,2,opt,name=hallType,proto3" json:"hallType,omitempty"`
	DistrictId string `protobuf:"bytes,3,opt,name=districtId,proto3" json:"districtId,omitempty"`
	Page       string `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	Size       string `protobuf:"bytes,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CinemaListRequest) Reset() {
	*x = CinemaListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CinemaListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CinemaListRequest) ProtoMessage() {}

func (x *CinemaListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CinemaListRequest.ProtoReflect.Descriptor instead.
func (*CinemaListRequest) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{0}
}

func (x *CinemaListRequest) GetBrandId() string {
	if x != nil {
		return x.BrandId
	}
	return ""
}

func (x *CinemaListRequest) GetHallType() string {
	if x != nil {
		return x.HallType
	}
	return ""
}

func (x *CinemaListRequest) GetDistrictId() string {
	if x != nil {
		return x.DistrictId
	}
	return ""
}

func (x *CinemaListRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *CinemaListRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type CinemaListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cinema []*CinemaPreview `protobuf:"bytes,1,rep,name=cinema,proto3" json:"cinema,omitempty"`
}

func (x *CinemaListResponse) Reset() {
	*x = CinemaListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CinemaListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CinemaListResponse) ProtoMessage() {}

func (x *CinemaListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CinemaListResponse.ProtoReflect.Descriptor instead.
func (*CinemaListResponse) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{1}
}

func (x *CinemaListResponse) GetCinema() []*CinemaPreview {
	if x != nil {
		return x.Cinema
	}
	return nil
}

type CinemaPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CinemaName string `protobuf:"bytes,2,opt,name=cinemaName,proto3" json:"cinemaName,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	MinPrice   string `protobuf:"bytes,4,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
}

func (x *CinemaPreview) Reset() {
	*x = CinemaPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CinemaPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CinemaPreview) ProtoMessage() {}

func (x *CinemaPreview) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CinemaPreview.ProtoReflect.Descriptor instead.
func (*CinemaPreview) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{2}
}

func (x *CinemaPreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CinemaPreview) GetCinemaName() string {
	if x != nil {
		return x.CinemaName
	}
	return ""
}

func (x *CinemaPreview) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CinemaPreview) GetMinPrice() string {
	if x != nil {
		return x.MinPrice
	}
	return ""
}

type ConditionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName string `protobuf:"bytes,1,opt,name=cityName,proto3" json:"cityName,omitempty"`
}

func (x *ConditionListRequest) Reset() {
	*x = ConditionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionListRequest) ProtoMessage() {}

func (x *ConditionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionListRequest.ProtoReflect.Descriptor instead.
func (*ConditionListRequest) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{3}
}

func (x *ConditionListRequest) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

type ConditionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandList    []*BrandCondition    `protobuf:"bytes,1,rep,name=brandList,proto3" json:"brandList,omitempty"`
	HallList     []*HallType          `protobuf:"bytes,2,rep,name=hallList,proto3" json:"hallList,omitempty"`
	DistrictList []*DistrictCondition `protobuf:"bytes,3,rep,name=districtList,proto3" json:"districtList,omitempty"`
}

func (x *ConditionListResponse) Reset() {
	*x = ConditionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionListResponse) ProtoMessage() {}

func (x *ConditionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionListResponse.ProtoReflect.Descriptor instead.
func (*ConditionListResponse) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{4}
}

func (x *ConditionListResponse) GetBrandList() []*BrandCondition {
	if x != nil {
		return x.BrandList
	}
	return nil
}

func (x *ConditionListResponse) GetHallList() []*HallType {
	if x != nil {
		return x.HallList
	}
	return nil
}

func (x *ConditionListResponse) GetDistrictList() []*DistrictCondition {
	if x != nil {
		return x.DistrictList
	}
	return nil
}

type BrandCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BrandName string `protobuf:"bytes,2,opt,name=brandName,proto3" json:"brandName,omitempty"`
}

func (x *BrandCondition) Reset() {
	*x = BrandCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandCondition) ProtoMessage() {}

func (x *BrandCondition) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandCondition.ProtoReflect.Descriptor instead.
func (*BrandCondition) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{5}
}

func (x *BrandCondition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BrandCondition) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

type DistrictCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DistrictName string `protobuf:"bytes,2,opt,name=districtName,proto3" json:"districtName,omitempty"`
}

func (x *DistrictCondition) Reset() {
	*x = DistrictCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistrictCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistrictCondition) ProtoMessage() {}

func (x *DistrictCondition) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistrictCondition.ProtoReflect.Descriptor instead.
func (*DistrictCondition) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{6}
}

func (x *DistrictCondition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DistrictCondition) GetDistrictName() string {
	if x != nil {
		return x.DistrictName
	}
	return ""
}

type HallType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HallTypeName string `protobuf:"bytes,2,opt,name=HallTypeName,proto3" json:"HallTypeName,omitempty"`
}

func (x *HallType) Reset() {
	*x = HallType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HallType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HallType) ProtoMessage() {}

func (x *HallType) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HallType.ProtoReflect.Descriptor instead.
func (*HallType) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{7}
}

func (x *HallType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HallType) GetHallTypeName() string {
	if x != nil {
		return x.HallTypeName
	}
	return ""
}

type GetCinemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CinemaId string `protobuf:"bytes,1,opt,name=cinemaId,proto3" json:"cinemaId,omitempty"`
}

func (x *GetCinemaRequest) Reset() {
	*x = GetCinemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCinemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCinemaRequest) ProtoMessage() {}

func (x *GetCinemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCinemaRequest.ProtoReflect.Descriptor instead.
func (*GetCinemaRequest) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{8}
}

func (x *GetCinemaRequest) GetCinemaId() string {
	if x != nil {
		return x.CinemaId
	}
	return ""
}

type GetCinemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CinemaName    string   `protobuf:"bytes,1,opt,name=cinemaName,proto3" json:"cinemaName,omitempty"`
	CinemaAddress string   `protobuf:"bytes,2,opt,name=cinemaAddress,proto3" json:"cinemaAddress,omitempty"`
	CinemaPhone   string   `protobuf:"bytes,3,opt,name=cinemaPhone,proto3" json:"cinemaPhone,omitempty"`
	CinemaImgs    string   `protobuf:"bytes,4,opt,name=cinemaImgs,proto3" json:"cinemaImgs,omitempty"`
	FilmIds       []string `protobuf:"bytes,5,rep,name=filmIds,proto3" json:"filmIds,omitempty"`
}

func (x *GetCinemaResponse) Reset() {
	*x = GetCinemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCinemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCinemaResponse) ProtoMessage() {}

func (x *GetCinemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCinemaResponse.ProtoReflect.Descriptor instead.
func (*GetCinemaResponse) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{9}
}

func (x *GetCinemaResponse) GetCinemaName() string {
	if x != nil {
		return x.CinemaName
	}
	return ""
}

func (x *GetCinemaResponse) GetCinemaAddress() string {
	if x != nil {
		return x.CinemaAddress
	}
	return ""
}

func (x *GetCinemaResponse) GetCinemaPhone() string {
	if x != nil {
		return x.CinemaPhone
	}
	return ""
}

func (x *GetCinemaResponse) GetCinemaImgs() string {
	if x != nil {
		return x.CinemaImgs
	}
	return ""
}

func (x *GetCinemaResponse) GetFilmIds() []string {
	if x != nil {
		return x.FilmIds
	}
	return nil
}

type GetShowListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CinemaId string `protobuf:"bytes,1,opt,name=cinemaId,proto3" json:"cinemaId,omitempty"`
	FilmId   string `protobuf:"bytes,2,opt,name=filmId,proto3" json:"filmId,omitempty"`
	ShowDate string `protobuf:"bytes,3,opt,name=showDate,proto3" json:"showDate,omitempty"`
}

func (x *GetShowListRequest) Reset() {
	*x = GetShowListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowListRequest) ProtoMessage() {}

func (x *GetShowListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowListRequest.ProtoReflect.Descriptor instead.
func (*GetShowListRequest) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{10}
}

func (x *GetShowListRequest) GetCinemaId() string {
	if x != nil {
		return x.CinemaId
	}
	return ""
}

func (x *GetShowListRequest) GetFilmId() string {
	if x != nil {
		return x.FilmId
	}
	return ""
}

func (x *GetShowListRequest) GetShowDate() string {
	if x != nil {
		return x.ShowDate
	}
	return ""
}

type GetShowListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Show []*CinemaShow `protobuf:"bytes,1,rep,name=show,proto3" json:"show,omitempty"`
}

func (x *GetShowListResponse) Reset() {
	*x = GetShowListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShowListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShowListResponse) ProtoMessage() {}

func (x *GetShowListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShowListResponse.ProtoReflect.Descriptor instead.
func (*GetShowListResponse) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{11}
}

func (x *GetShowListResponse) GetShow() []*CinemaShow {
	if x != nil {
		return x.Show
	}
	return nil
}

type CinemaShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BeginTime string `protobuf:"bytes,2,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime   string `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Language  string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Price     string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	HallName  string `protobuf:"bytes,6,opt,name=hallName,proto3" json:"hallName,omitempty"`
}

func (x *CinemaShow) Reset() {
	*x = CinemaShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CinemaShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CinemaShow) ProtoMessage() {}

func (x *CinemaShow) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CinemaShow.ProtoReflect.Descriptor instead.
func (*CinemaShow) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{12}
}

func (x *CinemaShow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CinemaShow) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *CinemaShow) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CinemaShow) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CinemaShow) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CinemaShow) GetHallName() string {
	if x != nil {
		return x.HallName
	}
	return ""
}

type GetHallSeatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HallId string `protobuf:"bytes,1,opt,name=hallId,proto3" json:"hallId,omitempty"`
}

func (x *GetHallSeatsRequest) Reset() {
	*x = GetHallSeatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHallSeatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHallSeatsRequest) ProtoMessage() {}

func (x *GetHallSeatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHallSeatsRequest.ProtoReflect.Descriptor instead.
func (*GetHallSeatsRequest) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{13}
}

func (x *GetHallSeatsRequest) GetHallId() string {
	if x != nil {
		return x.HallId
	}
	return ""
}

type GetHallSeatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatFile []byte `protobuf:"bytes,1,opt,name=seatFile,proto3" json:"seatFile,omitempty"`
}

func (x *GetHallSeatsResponse) Reset() {
	*x = GetHallSeatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHallSeatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHallSeatsResponse) ProtoMessage() {}

func (x *GetHallSeatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHallSeatsResponse.ProtoReflect.Descriptor instead.
func (*GetHallSeatsResponse) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{14}
}

func (x *GetHallSeatsResponse) GetSeatFile() []byte {
	if x != nil {
		return x.SeatFile
	}
	return nil
}

type DeductSeatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowId string `protobuf:"bytes,1,opt,name=showId,proto3" json:"showId,omitempty"`
	Num    string `protobuf:"bytes,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *DeductSeatsRequest) Reset() {
	*x = DeductSeatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeductSeatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductSeatsRequest) ProtoMessage() {}

func (x *DeductSeatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductSeatsRequest.ProtoReflect.Descriptor instead.
func (*DeductSeatsRequest) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{15}
}

func (x *DeductSeatsRequest) GetShowId() string {
	if x != nil {
		return x.ShowId
	}
	return ""
}

func (x *DeductSeatsRequest) GetNum() string {
	if x != nil {
		return x.Num
	}
	return ""
}

type DeductSeatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeductSeatsResponse) Reset() {
	*x = DeductSeatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cinema_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeductSeatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductSeatsResponse) ProtoMessage() {}

func (x *DeductSeatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cinema_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductSeatsResponse.ProtoReflect.Descriptor instead.
func (*DeductSeatsResponse) Descriptor() ([]byte, []int) {
	return file_cinema_proto_rawDescGZIP(), []int{16}
}

var File_cinema_proto protoreflect.FileDescriptor

var file_cinema_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x43, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x43, 0x0a, 0x12, 0x43, 0x69,
	0x6e, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x06, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x22,
	0x76, 0x0a, 0x0d, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x32, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x15,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x68,
	0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x48, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x68, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x0e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3e, 0x0a, 0x08, 0x48, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x48, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x48, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x2e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x49,
	0x64, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x69, 0x6e,
	0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x49, 0x6d, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x49, 0x6d, 0x67, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x64, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x65, 0x22,
	0x3d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x69,
	0x6e, 0x65, 0x6d, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x22, 0xa2,
	0x01, 0x0a, 0x0a, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61,
	0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6c, 0x6c,
	0x49, 0x64, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x61, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x65,
	0x61, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x77, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x91, 0x04,
	0x0a, 0x09, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x52, 0x70, 0x63, 0x12, 0x46, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63,
	0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61,
	0x2e, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x12, 0x18, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69,
	0x6e, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x69,
	0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1b,
	0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6c, 0x6c, 0x53,
	0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x69,
	0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x44, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x2e, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4e, 0x0a, 0x13, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73,
	0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x2e, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cinema_proto_rawDescOnce sync.Once
	file_cinema_proto_rawDescData = file_cinema_proto_rawDesc
)

func file_cinema_proto_rawDescGZIP() []byte {
	file_cinema_proto_rawDescOnce.Do(func() {
		file_cinema_proto_rawDescData = protoimpl.X.CompressGZIP(file_cinema_proto_rawDescData)
	})
	return file_cinema_proto_rawDescData
}

var file_cinema_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cinema_proto_goTypes = []interface{}{
	(*CinemaListRequest)(nil),     // 0: cinema.CinemaListRequest
	(*CinemaListResponse)(nil),    // 1: cinema.CinemaListResponse
	(*CinemaPreview)(nil),         // 2: cinema.CinemaPreview
	(*ConditionListRequest)(nil),  // 3: cinema.ConditionListRequest
	(*ConditionListResponse)(nil), // 4: cinema.ConditionListResponse
	(*BrandCondition)(nil),        // 5: cinema.BrandCondition
	(*DistrictCondition)(nil),     // 6: cinema.DistrictCondition
	(*HallType)(nil),              // 7: cinema.HallType
	(*GetCinemaRequest)(nil),      // 8: cinema.GetCinemaRequest
	(*GetCinemaResponse)(nil),     // 9: cinema.GetCinemaResponse
	(*GetShowListRequest)(nil),    // 10: cinema.GetShowListRequest
	(*GetShowListResponse)(nil),   // 11: cinema.GetShowListResponse
	(*CinemaShow)(nil),            // 12: cinema.CinemaShow
	(*GetHallSeatsRequest)(nil),   // 13: cinema.GetHallSeatsRequest
	(*GetHallSeatsResponse)(nil),  // 14: cinema.GetHallSeatsResponse
	(*DeductSeatsRequest)(nil),    // 15: cinema.DeductSeatsRequest
	(*DeductSeatsResponse)(nil),   // 16: cinema.DeductSeatsResponse
}
var file_cinema_proto_depIdxs = []int32{
	2,  // 0: cinema.CinemaListResponse.cinema:type_name -> cinema.CinemaPreview
	5,  // 1: cinema.ConditionListResponse.brandList:type_name -> cinema.BrandCondition
	7,  // 2: cinema.ConditionListResponse.hallList:type_name -> cinema.HallType
	6,  // 3: cinema.ConditionListResponse.districtList:type_name -> cinema.DistrictCondition
	12, // 4: cinema.GetShowListResponse.show:type_name -> cinema.CinemaShow
	0,  // 5: cinema.cinemaRpc.GetCinemaList:input_type -> cinema.CinemaListRequest
	3,  // 6: cinema.cinemaRpc.GetConditionList:input_type -> cinema.ConditionListRequest
	8,  // 7: cinema.cinemaRpc.GetCinema:input_type -> cinema.GetCinemaRequest
	10, // 8: cinema.cinemaRpc.GetShowList:input_type -> cinema.GetShowListRequest
	13, // 9: cinema.cinemaRpc.GetHallSeats:input_type -> cinema.GetHallSeatsRequest
	15, // 10: cinema.cinemaRpc.DeductSeats:input_type -> cinema.DeductSeatsRequest
	15, // 11: cinema.cinemaRpc.DeductSeatsRollBack:input_type -> cinema.DeductSeatsRequest
	1,  // 12: cinema.cinemaRpc.GetCinemaList:output_type -> cinema.CinemaListResponse
	4,  // 13: cinema.cinemaRpc.GetConditionList:output_type -> cinema.ConditionListResponse
	9,  // 14: cinema.cinemaRpc.GetCinema:output_type -> cinema.GetCinemaResponse
	11, // 15: cinema.cinemaRpc.GetShowList:output_type -> cinema.GetShowListResponse
	14, // 16: cinema.cinemaRpc.GetHallSeats:output_type -> cinema.GetHallSeatsResponse
	16, // 17: cinema.cinemaRpc.DeductSeats:output_type -> cinema.DeductSeatsResponse
	16, // 18: cinema.cinemaRpc.DeductSeatsRollBack:output_type -> cinema.DeductSeatsResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_cinema_proto_init() }
func file_cinema_proto_init() {
	if File_cinema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cinema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CinemaListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CinemaListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CinemaPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistrictCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HallType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCinemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCinemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShowListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShowListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CinemaShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHallSeatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHallSeatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeductSeatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cinema_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeductSeatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cinema_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cinema_proto_goTypes,
		DependencyIndexes: file_cinema_proto_depIdxs,
		MessageInfos:      file_cinema_proto_msgTypes,
	}.Build()
	File_cinema_proto = out.File
	file_cinema_proto_rawDesc = nil
	file_cinema_proto_goTypes = nil
	file_cinema_proto_depIdxs = nil
}
