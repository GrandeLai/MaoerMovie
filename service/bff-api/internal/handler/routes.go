// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "MaoerMovie/service/bff-api/internal/handler/admin"
	auth "MaoerMovie/service/bff-api/internal/handler/auth"
	film "MaoerMovie/service/bff-api/internal/handler/film"
	user "MaoerMovie/service/bff-api/internal/handler/user"
	"MaoerMovie/service/bff-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: auth.LogInHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: auth.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/send_email_code",
				Handler: auth.SendEmailCodeHandler(serverCtx),
			},
		},
		rest.WithPrefix("/auth"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/update_password",
				Handler: auth.UpdatePasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/refresh/auth",
				Handler: auth.RefreshAuthHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/auth"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/get_user_info",
				Handler: user.GetUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update_user_info",
				Handler: user.UpdateUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/search_user",
				Handler: user.SearchUserHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/get_film",
				Handler: film.GetFilmHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get_detail",
				Handler: film.FilmDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/film_search",
				Handler: film.FilmSearchHandler(serverCtx),
			},
		},
		rest.WithPrefix("/film"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/film_list",
				Handler: admin.AdminFilmListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/film_new",
				Handler: admin.FilmNewHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/film_detail_add",
				Handler: admin.FilmDetailAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/actor_list",
				Handler: admin.GetActorListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/film_remove",
				Handler: admin.FilmRemoveHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin"),
	)
}
