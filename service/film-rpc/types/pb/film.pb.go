// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.13.0
// source: film.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonRequest) Reset() {
	*x = CommonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRequest) ProtoMessage() {}

func (x *CommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRequest.ProtoReflect.Descriptor instead.
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{0}
}

type FilmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FilmRequest) Reset() {
	*x = FilmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmRequest) ProtoMessage() {}

func (x *FilmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmRequest.ProtoReflect.Descriptor instead.
func (*FilmRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{1}
}

func (x *FilmRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FilmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FilmResponse) Reset() {
	*x = FilmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmResponse) ProtoMessage() {}

func (x *FilmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmResponse.ProtoReflect.Descriptor instead.
func (*FilmResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{2}
}

type Film struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmName        string `protobuf:"bytes,1,opt,name=filmName,proto3" json:"filmName,omitempty"`
	FilmEnglishName string `protobuf:"bytes,2,opt,name=filmEnglishName,proto3" json:"filmEnglishName,omitempty"`
	FilmType        string `protobuf:"bytes,3,opt,name=filmType,proto3" json:"filmType,omitempty"`
	FilmCover       string `protobuf:"bytes,4,opt,name=filmCover,proto3" json:"filmCover,omitempty"`
	FilmLength      string `protobuf:"bytes,5,opt,name=filmLength,proto3" json:"filmLength,omitempty"`
	FilmCategory    string `protobuf:"bytes,6,opt,name=filmCategory,proto3" json:"filmCategory,omitempty"`
	FilmArea        string `protobuf:"bytes,7,opt,name=filmArea,proto3" json:"filmArea,omitempty"`
	FilmTime        string `protobuf:"bytes,8,opt,name=filmTime,proto3" json:"filmTime,omitempty"`
	Director        string `protobuf:"bytes,9,opt,name=director,proto3" json:"director,omitempty"`
	Biography       string `protobuf:"bytes,10,opt,name=biography,proto3" json:"biography,omitempty"`
}

func (x *Film) Reset() {
	*x = Film{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Film) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Film) ProtoMessage() {}

func (x *Film) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Film.ProtoReflect.Descriptor instead.
func (*Film) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{3}
}

func (x *Film) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *Film) GetFilmEnglishName() string {
	if x != nil {
		return x.FilmEnglishName
	}
	return ""
}

func (x *Film) GetFilmType() string {
	if x != nil {
		return x.FilmType
	}
	return ""
}

func (x *Film) GetFilmCover() string {
	if x != nil {
		return x.FilmCover
	}
	return ""
}

func (x *Film) GetFilmLength() string {
	if x != nil {
		return x.FilmLength
	}
	return ""
}

func (x *Film) GetFilmCategory() string {
	if x != nil {
		return x.FilmCategory
	}
	return ""
}

func (x *Film) GetFilmArea() string {
	if x != nil {
		return x.FilmArea
	}
	return ""
}

func (x *Film) GetFilmTime() string {
	if x != nil {
		return x.FilmTime
	}
	return ""
}

func (x *Film) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *Film) GetBiography() string {
	if x != nil {
		return x.Biography
	}
	return ""
}

type FilmPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmName      string `protobuf:"bytes,1,opt,name=filmName,proto3" json:"filmName,omitempty"`
	FilmTime      string `protobuf:"bytes,2,opt,name=filmTime,proto3" json:"filmTime,omitempty"`
	FilmCategory  string `protobuf:"bytes,3,opt,name=filmCategory,proto3" json:"filmCategory,omitempty"`
	FilmScore     string `protobuf:"bytes,4,opt,name=filmScore,proto3" json:"filmScore,omitempty"`
	FilmCoverUrl  string `protobuf:"bytes,5,opt,name=filmCoverUrl,proto3" json:"filmCoverUrl,omitempty"`
	ActorNameList string `protobuf:"bytes,6,opt,name=actorNameList,proto3" json:"actorNameList,omitempty"`
	FilmArea      string `protobuf:"bytes,7,opt,name=filmArea,proto3" json:"filmArea,omitempty"`
}

func (x *FilmPreview) Reset() {
	*x = FilmPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmPreview) ProtoMessage() {}

func (x *FilmPreview) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmPreview.ProtoReflect.Descriptor instead.
func (*FilmPreview) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{4}
}

func (x *FilmPreview) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *FilmPreview) GetFilmTime() string {
	if x != nil {
		return x.FilmTime
	}
	return ""
}

func (x *FilmPreview) GetFilmCategory() string {
	if x != nil {
		return x.FilmCategory
	}
	return ""
}

func (x *FilmPreview) GetFilmScore() string {
	if x != nil {
		return x.FilmScore
	}
	return ""
}

func (x *FilmPreview) GetFilmCoverUrl() string {
	if x != nil {
		return x.FilmCoverUrl
	}
	return ""
}

func (x *FilmPreview) GetActorNameList() string {
	if x != nil {
		return x.ActorNameList
	}
	return ""
}

func (x *FilmPreview) GetFilmArea() string {
	if x != nil {
		return x.FilmArea
	}
	return ""
}

type FilmDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmScore      string `protobuf:"bytes,1,opt,name=filmScore,proto3" json:"filmScore,omitempty"`
	FilmScoreNum   string `protobuf:"bytes,2,opt,name=filmScoreNum,proto3" json:"filmScoreNum,omitempty"`
	FilmPreSaleNum string `protobuf:"bytes,3,opt,name=filmPreSaleNum,proto3" json:"filmPreSaleNum,omitempty"`
	FilmBoxOffice  string `protobuf:"bytes,4,opt,name=filmBoxOffice,proto3" json:"filmBoxOffice,omitempty"`
	FilmImgs       string `protobuf:"bytes,5,opt,name=filmImgs,proto3" json:"filmImgs,omitempty"`
	ActorList      string `protobuf:"bytes,6,opt,name=actorList,proto3" json:"actorList,omitempty"`
}

func (x *FilmDetail) Reset() {
	*x = FilmDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmDetail) ProtoMessage() {}

func (x *FilmDetail) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmDetail.ProtoReflect.Descriptor instead.
func (*FilmDetail) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{5}
}

func (x *FilmDetail) GetFilmScore() string {
	if x != nil {
		return x.FilmScore
	}
	return ""
}

func (x *FilmDetail) GetFilmScoreNum() string {
	if x != nil {
		return x.FilmScoreNum
	}
	return ""
}

func (x *FilmDetail) GetFilmPreSaleNum() string {
	if x != nil {
		return x.FilmPreSaleNum
	}
	return ""
}

func (x *FilmDetail) GetFilmBoxOffice() string {
	if x != nil {
		return x.FilmBoxOffice
	}
	return ""
}

func (x *FilmDetail) GetFilmImgs() string {
	if x != nil {
		return x.FilmImgs
	}
	return ""
}

func (x *FilmDetail) GetActorList() string {
	if x != nil {
		return x.ActorList
	}
	return ""
}

type GetFilmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Film *Film `protobuf:"bytes,1,opt,name=film,proto3" json:"film,omitempty"`
}

func (x *GetFilmResponse) Reset() {
	*x = GetFilmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilmResponse) ProtoMessage() {}

func (x *GetFilmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilmResponse.ProtoReflect.Descriptor instead.
func (*GetFilmResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{6}
}

func (x *GetFilmResponse) GetFilm() *Film {
	if x != nil {
		return x.Film
	}
	return nil
}

type GetFilmDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmDetail *FilmDetail `protobuf:"bytes,2,opt,name=filmDetail,proto3" json:"filmDetail,omitempty"`
}

func (x *GetFilmDetailResponse) Reset() {
	*x = GetFilmDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilmDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilmDetailResponse) ProtoMessage() {}

func (x *GetFilmDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilmDetailResponse.ProtoReflect.Descriptor instead.
func (*GetFilmDetailResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{7}
}

func (x *GetFilmDetailResponse) GetFilmDetail() *FilmDetail {
	if x != nil {
		return x.FilmDetail
	}
	return nil
}

type FilmCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmName        string `protobuf:"bytes,1,opt,name=filmName,proto3" json:"filmName,omitempty"`
	FilmEnglishName string `protobuf:"bytes,2,opt,name=filmEnglishName,proto3" json:"filmEnglishName,omitempty"`
	FilmType        string `protobuf:"bytes,3,opt,name=filmType,proto3" json:"filmType,omitempty"`
	FilmCover       []byte `protobuf:"bytes,4,opt,name=filmCover,proto3" json:"filmCover,omitempty"`
	CoverName       string `protobuf:"bytes,5,opt,name=coverName,proto3" json:"coverName,omitempty"`
	FilmLength      string `protobuf:"bytes,6,opt,name=filmLength,proto3" json:"filmLength,omitempty"`
	CategoryId      string `protobuf:"bytes,7,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	FilmArea        string `protobuf:"bytes,8,opt,name=filmArea,proto3" json:"filmArea,omitempty"`
	FilmTime        string `protobuf:"bytes,9,opt,name=filmTime,proto3" json:"filmTime,omitempty"`
	DirectorId      string `protobuf:"bytes,10,opt,name=directorId,proto3" json:"directorId,omitempty"`
	Biography       string `protobuf:"bytes,11,opt,name=biography,proto3" json:"biography,omitempty"`
	ActorList       string `protobuf:"bytes,12,opt,name=actorList,proto3" json:"actorList,omitempty"`
	RoleList        string `protobuf:"bytes,13,opt,name=roleList,proto3" json:"roleList,omitempty"`
}

func (x *FilmCreateRequest) Reset() {
	*x = FilmCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmCreateRequest) ProtoMessage() {}

func (x *FilmCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmCreateRequest.ProtoReflect.Descriptor instead.
func (*FilmCreateRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{8}
}

func (x *FilmCreateRequest) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *FilmCreateRequest) GetFilmEnglishName() string {
	if x != nil {
		return x.FilmEnglishName
	}
	return ""
}

func (x *FilmCreateRequest) GetFilmType() string {
	if x != nil {
		return x.FilmType
	}
	return ""
}

func (x *FilmCreateRequest) GetFilmCover() []byte {
	if x != nil {
		return x.FilmCover
	}
	return nil
}

func (x *FilmCreateRequest) GetCoverName() string {
	if x != nil {
		return x.CoverName
	}
	return ""
}

func (x *FilmCreateRequest) GetFilmLength() string {
	if x != nil {
		return x.FilmLength
	}
	return ""
}

func (x *FilmCreateRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *FilmCreateRequest) GetFilmArea() string {
	if x != nil {
		return x.FilmArea
	}
	return ""
}

func (x *FilmCreateRequest) GetFilmTime() string {
	if x != nil {
		return x.FilmTime
	}
	return ""
}

func (x *FilmCreateRequest) GetDirectorId() string {
	if x != nil {
		return x.DirectorId
	}
	return ""
}

func (x *FilmCreateRequest) GetBiography() string {
	if x != nil {
		return x.Biography
	}
	return ""
}

func (x *FilmCreateRequest) GetActorList() string {
	if x != nil {
		return x.ActorList
	}
	return ""
}

func (x *FilmCreateRequest) GetRoleList() string {
	if x != nil {
		return x.RoleList
	}
	return ""
}

type FilmCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FilmCreateResponse) Reset() {
	*x = FilmCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmCreateResponse) ProtoMessage() {}

func (x *FilmCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmCreateResponse.ProtoReflect.Descriptor instead.
func (*FilmCreateResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{9}
}

func (x *FilmCreateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FilmUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmName        string `protobuf:"bytes,1,opt,name=filmName,proto3" json:"filmName,omitempty"`
	FilmEnglishName string `protobuf:"bytes,2,opt,name=filmEnglishName,proto3" json:"filmEnglishName,omitempty"`
	FilmType        string `protobuf:"bytes,3,opt,name=filmType,proto3" json:"filmType,omitempty"`
	FilmCoverName   string `protobuf:"bytes,4,opt,name=filmCoverName,proto3" json:"filmCoverName,omitempty"`
	FilmCover       []byte `protobuf:"bytes,5,opt,name=filmCover,proto3" json:"filmCover,omitempty"`
	FilmLength      string `protobuf:"bytes,6,opt,name=filmLength,proto3" json:"filmLength,omitempty"`
	FilmCategory    string `protobuf:"bytes,7,opt,name=filmCategory,proto3" json:"filmCategory,omitempty"`
	FilmArea        string `protobuf:"bytes,8,opt,name=filmArea,proto3" json:"filmArea,omitempty"`
	FilmTime        string `protobuf:"bytes,9,opt,name=filmTime,proto3" json:"filmTime,omitempty"`
	Director        string `protobuf:"bytes,10,opt,name=director,proto3" json:"director,omitempty"`
	Biography       string `protobuf:"bytes,11,opt,name=biography,proto3" json:"biography,omitempty"`
	ActorList       string `protobuf:"bytes,12,opt,name=actorList,proto3" json:"actorList,omitempty"`
	FilmId          string `protobuf:"bytes,13,opt,name=filmId,proto3" json:"filmId,omitempty"`
	FilmPreSaleNum  string `protobuf:"bytes,14,opt,name=filmPreSaleNum,proto3" json:"filmPreSaleNum,omitempty"`
}

func (x *FilmUpdateRequest) Reset() {
	*x = FilmUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmUpdateRequest) ProtoMessage() {}

func (x *FilmUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmUpdateRequest.ProtoReflect.Descriptor instead.
func (*FilmUpdateRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{10}
}

func (x *FilmUpdateRequest) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmEnglishName() string {
	if x != nil {
		return x.FilmEnglishName
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmType() string {
	if x != nil {
		return x.FilmType
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmCoverName() string {
	if x != nil {
		return x.FilmCoverName
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmCover() []byte {
	if x != nil {
		return x.FilmCover
	}
	return nil
}

func (x *FilmUpdateRequest) GetFilmLength() string {
	if x != nil {
		return x.FilmLength
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmCategory() string {
	if x != nil {
		return x.FilmCategory
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmArea() string {
	if x != nil {
		return x.FilmArea
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmTime() string {
	if x != nil {
		return x.FilmTime
	}
	return ""
}

func (x *FilmUpdateRequest) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *FilmUpdateRequest) GetBiography() string {
	if x != nil {
		return x.Biography
	}
	return ""
}

func (x *FilmUpdateRequest) GetActorList() string {
	if x != nil {
		return x.ActorList
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmId() string {
	if x != nil {
		return x.FilmId
	}
	return ""
}

func (x *FilmUpdateRequest) GetFilmPreSaleNum() string {
	if x != nil {
		return x.FilmPreSaleNum
	}
	return ""
}

type FilmInfoUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmId         string   `protobuf:"bytes,1,opt,name=filmId,proto3" json:"filmId,omitempty"`
	FilmPreSaleSum string   `protobuf:"bytes,2,opt,name=filmPreSaleSum,proto3" json:"filmPreSaleSum,omitempty"`
	FilmImgs       [][]byte `protobuf:"bytes,3,rep,name=filmImgs,proto3" json:"filmImgs,omitempty"`
	FilmNameList   []string `protobuf:"bytes,4,rep,name=filmNameList,proto3" json:"filmNameList,omitempty"`
}

func (x *FilmInfoUpdateRequest) Reset() {
	*x = FilmInfoUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmInfoUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmInfoUpdateRequest) ProtoMessage() {}

func (x *FilmInfoUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmInfoUpdateRequest.ProtoReflect.Descriptor instead.
func (*FilmInfoUpdateRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{11}
}

func (x *FilmInfoUpdateRequest) GetFilmId() string {
	if x != nil {
		return x.FilmId
	}
	return ""
}

func (x *FilmInfoUpdateRequest) GetFilmPreSaleSum() string {
	if x != nil {
		return x.FilmPreSaleSum
	}
	return ""
}

func (x *FilmInfoUpdateRequest) GetFilmImgs() [][]byte {
	if x != nil {
		return x.FilmImgs
	}
	return nil
}

func (x *FilmInfoUpdateRequest) GetFilmNameList() []string {
	if x != nil {
		return x.FilmNameList
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page string `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Size string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{12}
}

func (x *ListRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *ListRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type UserFilmSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListRequest *ListRequest `protobuf:"bytes,1,opt,name=listRequest,proto3" json:"listRequest,omitempty"`
	Category    string       `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Area        string       `protobuf:"bytes,3,opt,name=area,proto3" json:"area,omitempty"`
	Time        string       `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	SortType    string       `protobuf:"bytes,5,opt,name=sortType,proto3" json:"sortType,omitempty"`
}

func (x *UserFilmSearchRequest) Reset() {
	*x = UserFilmSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilmSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilmSearchRequest) ProtoMessage() {}

func (x *UserFilmSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilmSearchRequest.ProtoReflect.Descriptor instead.
func (*UserFilmSearchRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{13}
}

func (x *UserFilmSearchRequest) GetListRequest() *ListRequest {
	if x != nil {
		return x.ListRequest
	}
	return nil
}

func (x *UserFilmSearchRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UserFilmSearchRequest) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *UserFilmSearchRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *UserFilmSearchRequest) GetSortType() string {
	if x != nil {
		return x.SortType
	}
	return ""
}

type AdminFilmListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Film `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count string  `protobuf:"bytes,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AdminFilmListResponse) Reset() {
	*x = AdminFilmListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminFilmListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminFilmListResponse) ProtoMessage() {}

func (x *AdminFilmListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminFilmListResponse.ProtoReflect.Descriptor instead.
func (*AdminFilmListResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{14}
}

func (x *AdminFilmListResponse) GetList() []*Film {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AdminFilmListResponse) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

type UserFilmSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailList []*FilmDetail `protobuf:"bytes,1,rep,name=detailList,proto3" json:"detailList,omitempty"`
	Count      string        `protobuf:"bytes,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UserFilmSearchResponse) Reset() {
	*x = UserFilmSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilmSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilmSearchResponse) ProtoMessage() {}

func (x *UserFilmSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilmSearchResponse.ProtoReflect.Descriptor instead.
func (*UserFilmSearchResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{15}
}

func (x *UserFilmSearchResponse) GetDetailList() []*FilmDetail {
	if x != nil {
		return x.DetailList
	}
	return nil
}

func (x *UserFilmSearchResponse) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

type ActorListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Actor `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count string   `protobuf:"bytes,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ActorListResponse) Reset() {
	*x = ActorListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorListResponse) ProtoMessage() {}

func (x *ActorListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorListResponse.ProtoReflect.Descriptor instead.
func (*ActorListResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{16}
}

func (x *ActorListResponse) GetList() []*Actor {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ActorListResponse) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

type Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId     string `protobuf:"bytes,1,opt,name=actorId,proto3" json:"actorId,omitempty"`
	ActorName   string `protobuf:"bytes,2,opt,name=actorName,proto3" json:"actorName,omitempty"`
	ActorAvatar string `protobuf:"bytes,3,opt,name=actorAvatar,proto3" json:"actorAvatar,omitempty"`
}

func (x *Actor) Reset() {
	*x = Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{17}
}

func (x *Actor) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *Actor) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *Actor) GetActorAvatar() string {
	if x != nil {
		return x.ActorAvatar
	}
	return ""
}

type SearchFilmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword    string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page       string `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	Size       string `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Category   string `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Area       string `protobuf:"bytes,5,opt,name=area,proto3" json:"area,omitempty"`
	SortedType string `protobuf:"bytes,6,opt,name=sortedType,proto3" json:"sortedType,omitempty"`
	TimeStart  string `protobuf:"bytes,7,opt,name=timeStart,proto3" json:"timeStart,omitempty"`
	TimeEnd    string `protobuf:"bytes,8,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`
}

func (x *SearchFilmRequest) Reset() {
	*x = SearchFilmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFilmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilmRequest) ProtoMessage() {}

func (x *SearchFilmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilmRequest.ProtoReflect.Descriptor instead.
func (*SearchFilmRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{18}
}

func (x *SearchFilmRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchFilmRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *SearchFilmRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *SearchFilmRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SearchFilmRequest) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *SearchFilmRequest) GetSortedType() string {
	if x != nil {
		return x.SortedType
	}
	return ""
}

func (x *SearchFilmRequest) GetTimeStart() string {
	if x != nil {
		return x.TimeStart
	}
	return ""
}

func (x *SearchFilmRequest) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

type SearchFilmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*FilmPreview `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchFilmResponse) Reset() {
	*x = SearchFilmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFilmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilmResponse) ProtoMessage() {}

func (x *SearchFilmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilmResponse.ProtoReflect.Descriptor instead.
func (*SearchFilmResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{19}
}

func (x *SearchFilmResponse) GetFilms() []*FilmPreview {
	if x != nil {
		return x.Films
	}
	return nil
}

func (x *SearchFilmResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetCategoryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*Category `protobuf:"bytes,1,rep,name=category,proto3" json:"category,omitempty"`
}

func (x *GetCategoryListResponse) Reset() {
	*x = GetCategoryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryListResponse) ProtoMessage() {}

func (x *GetCategoryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryListResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryListResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{20}
}

func (x *GetCategoryListResponse) GetCategory() []*Category {
	if x != nil {
		return x.Category
	}
	return nil
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId   string `protobuf:"bytes,1,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	CategoryName string `protobuf:"bytes,2,opt,name=categoryName,proto3" json:"categoryName,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{21}
}

func (x *Category) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *Category) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type CinemaFilmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmIds []string `protobuf:"bytes,1,rep,name=filmIds,proto3" json:"filmIds,omitempty"`
}

func (x *CinemaFilmRequest) Reset() {
	*x = CinemaFilmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CinemaFilmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CinemaFilmRequest) ProtoMessage() {}

func (x *CinemaFilmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CinemaFilmRequest.ProtoReflect.Descriptor instead.
func (*CinemaFilmRequest) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{22}
}

func (x *CinemaFilmRequest) GetFilmIds() []string {
	if x != nil {
		return x.FilmIds
	}
	return nil
}

type CinemaFilmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CinemaFilm []*CinemaFilm `protobuf:"bytes,1,rep,name=cinemaFilm,proto3" json:"cinemaFilm,omitempty"`
}

func (x *CinemaFilmResponse) Reset() {
	*x = CinemaFilmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CinemaFilmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CinemaFilmResponse) ProtoMessage() {}

func (x *CinemaFilmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CinemaFilmResponse.ProtoReflect.Descriptor instead.
func (*CinemaFilmResponse) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{23}
}

func (x *CinemaFilmResponse) GetCinemaFilm() []*CinemaFilm {
	if x != nil {
		return x.CinemaFilm
	}
	return nil
}

type CinemaFilm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilmId       string `protobuf:"bytes,1,opt,name=filmId,proto3" json:"filmId,omitempty"`
	FilmName     string `protobuf:"bytes,2,opt,name=filmName,proto3" json:"filmName,omitempty"`
	FilmLength   string `protobuf:"bytes,3,opt,name=filmLength,proto3" json:"filmLength,omitempty"`
	FilmCover    string `protobuf:"bytes,4,opt,name=filmCover,proto3" json:"filmCover,omitempty"`
	FilmCategory string `protobuf:"bytes,5,opt,name=filmCategory,proto3" json:"filmCategory,omitempty"`
	ActorList    string `protobuf:"bytes,6,opt,name=actorList,proto3" json:"actorList,omitempty"`
}

func (x *CinemaFilm) Reset() {
	*x = CinemaFilm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CinemaFilm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CinemaFilm) ProtoMessage() {}

func (x *CinemaFilm) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CinemaFilm.ProtoReflect.Descriptor instead.
func (*CinemaFilm) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{24}
}

func (x *CinemaFilm) GetFilmId() string {
	if x != nil {
		return x.FilmId
	}
	return ""
}

func (x *CinemaFilm) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *CinemaFilm) GetFilmLength() string {
	if x != nil {
		return x.FilmLength
	}
	return ""
}

func (x *CinemaFilm) GetFilmCover() string {
	if x != nil {
		return x.FilmCover
	}
	return ""
}

func (x *CinemaFilm) GetFilmCategory() string {
	if x != nil {
		return x.FilmCategory
	}
	return ""
}

func (x *CinemaFilm) GetActorList() string {
	if x != nil {
		return x.ActorList
	}
	return ""
}

var File_film_proto protoreflect.FileDescriptor

var file_film_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66, 0x69,
	0x6c, 0x6d, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xbc, 0x02, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x6d, 0x45,
	0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x66, 0x69, 0x6c, 0x6d, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x69, 0x6c, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x69, 0x6c, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x79, 0x22, 0xed, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c,
	0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x41, 0x72, 0x65,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x41, 0x72, 0x65,
	0x61, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x53, 0x61, 0x6c,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x6d,
	0x50, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69,
	0x6c, 0x6d, 0x42, 0x6f, 0x78, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x6d, 0x42, 0x6f, 0x78, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x6d, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x6d, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x66, 0x69,
	0x6c, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6d, 0x22, 0x49, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x6c,
	0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xa1, 0x03, 0x0a, 0x11, 0x46, 0x69, 0x6c,
	0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69,
	0x6c, 0x6d, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x6d, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x24, 0x0a, 0x12,
	0x46, 0x69, 0x6c, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xcd, 0x03, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x6d, 0x45, 0x6e, 0x67, 0x6c,
	0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x69, 0x6c, 0x6d, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69,
	0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69,
	0x6c, 0x6d, 0x50, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x46, 0x69, 0x6c, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x53,
	0x61, 0x6c, 0x65, 0x53, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69,
	0x6c, 0x6d, 0x50, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x6d, 0x49, 0x6d, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x6d, 0x49, 0x6d, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6d,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x66, 0x69, 0x6c, 0x6d,
	0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x60, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x61, 0x0a, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0xdd, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x22, 0x53, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x46,
	0x69, 0x6c, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x6d,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x4e,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2d,
	0x0a, 0x11, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x46, 0x0a,
	0x12, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x6c,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x43,
	0x69, 0x6e, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x0a, 0x63, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x46, 0x69, 0x6c, 0x6d, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61,
	0x46, 0x69, 0x6c, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6d,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c,
	0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69,
	0x6c, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xbb, 0x05, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x6d, 0x52, 0x70, 0x63, 0x12, 0x33, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x12,
	0x11, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x11, 0x2e, 0x66, 0x69, 0x6c,
	0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e,
	0x46, 0x69, 0x6c, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d,
	0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x6d, 0x12, 0x11, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x46,
	0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x66,
	0x69, 0x6c, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x66, 0x69,
	0x6c, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x11, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x13,
	0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x46,
	0x69, 0x6c, 0x6d, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x43, 0x69, 0x6e, 0x65, 0x6d,
	0x61, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66,
	0x69, 0x6c, 0x6d, 0x2e, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_film_proto_rawDescOnce sync.Once
	file_film_proto_rawDescData = file_film_proto_rawDesc
)

func file_film_proto_rawDescGZIP() []byte {
	file_film_proto_rawDescOnce.Do(func() {
		file_film_proto_rawDescData = protoimpl.X.CompressGZIP(file_film_proto_rawDescData)
	})
	return file_film_proto_rawDescData
}

var file_film_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_film_proto_goTypes = []interface{}{
	(*CommonRequest)(nil),           // 0: film.CommonRequest
	(*FilmRequest)(nil),             // 1: film.FilmRequest
	(*FilmResponse)(nil),            // 2: film.FilmResponse
	(*Film)(nil),                    // 3: film.Film
	(*FilmPreview)(nil),             // 4: film.FilmPreview
	(*FilmDetail)(nil),              // 5: film.FilmDetail
	(*GetFilmResponse)(nil),         // 6: film.GetFilmResponse
	(*GetFilmDetailResponse)(nil),   // 7: film.GetFilmDetailResponse
	(*FilmCreateRequest)(nil),       // 8: film.FilmCreateRequest
	(*FilmCreateResponse)(nil),      // 9: film.FilmCreateResponse
	(*FilmUpdateRequest)(nil),       // 10: film.FilmUpdateRequest
	(*FilmInfoUpdateRequest)(nil),   // 11: film.FilmInfoUpdateRequest
	(*ListRequest)(nil),             // 12: film.ListRequest
	(*UserFilmSearchRequest)(nil),   // 13: film.UserFilmSearchRequest
	(*AdminFilmListResponse)(nil),   // 14: film.AdminFilmListResponse
	(*UserFilmSearchResponse)(nil),  // 15: film.UserFilmSearchResponse
	(*ActorListResponse)(nil),       // 16: film.ActorListResponse
	(*Actor)(nil),                   // 17: film.Actor
	(*SearchFilmRequest)(nil),       // 18: film.SearchFilmRequest
	(*SearchFilmResponse)(nil),      // 19: film.SearchFilmResponse
	(*GetCategoryListResponse)(nil), // 20: film.GetCategoryListResponse
	(*Category)(nil),                // 21: film.Category
	(*CinemaFilmRequest)(nil),       // 22: film.CinemaFilmRequest
	(*CinemaFilmResponse)(nil),      // 23: film.CinemaFilmResponse
	(*CinemaFilm)(nil),              // 24: film.CinemaFilm
}
var file_film_proto_depIdxs = []int32{
	3,  // 0: film.GetFilmResponse.film:type_name -> film.Film
	5,  // 1: film.GetFilmDetailResponse.filmDetail:type_name -> film.FilmDetail
	12, // 2: film.UserFilmSearchRequest.listRequest:type_name -> film.ListRequest
	3,  // 3: film.AdminFilmListResponse.list:type_name -> film.Film
	5,  // 4: film.UserFilmSearchResponse.detailList:type_name -> film.FilmDetail
	17, // 5: film.ActorListResponse.list:type_name -> film.Actor
	4,  // 6: film.SearchFilmResponse.films:type_name -> film.FilmPreview
	21, // 7: film.GetCategoryListResponse.category:type_name -> film.Category
	24, // 8: film.CinemaFilmResponse.cinemaFilm:type_name -> film.CinemaFilm
	1,  // 9: film.filmRpc.GetFilm:input_type -> film.FilmRequest
	1,  // 10: film.filmRpc.GetFilmDetail:input_type -> film.FilmRequest
	8,  // 11: film.filmRpc.CreateFilm:input_type -> film.FilmCreateRequest
	10, // 12: film.filmRpc.UpdateFilm:input_type -> film.FilmUpdateRequest
	1,  // 13: film.filmRpc.DeleteFilm:input_type -> film.FilmRequest
	12, // 14: film.filmRpc.AdminFilmList:input_type -> film.ListRequest
	11, // 15: film.filmRpc.UpdateFilmInfo:input_type -> film.FilmInfoUpdateRequest
	12, // 16: film.filmRpc.GetActorList:input_type -> film.ListRequest
	18, // 17: film.filmRpc.SearchFilm:input_type -> film.SearchFilmRequest
	0,  // 18: film.filmRpc.GetAllCategory:input_type -> film.CommonRequest
	22, // 19: film.filmRpc.GetCinemaFilm:input_type -> film.CinemaFilmRequest
	6,  // 20: film.filmRpc.GetFilm:output_type -> film.GetFilmResponse
	7,  // 21: film.filmRpc.GetFilmDetail:output_type -> film.GetFilmDetailResponse
	9,  // 22: film.filmRpc.CreateFilm:output_type -> film.FilmCreateResponse
	2,  // 23: film.filmRpc.UpdateFilm:output_type -> film.FilmResponse
	2,  // 24: film.filmRpc.DeleteFilm:output_type -> film.FilmResponse
	14, // 25: film.filmRpc.AdminFilmList:output_type -> film.AdminFilmListResponse
	2,  // 26: film.filmRpc.UpdateFilmInfo:output_type -> film.FilmResponse
	16, // 27: film.filmRpc.GetActorList:output_type -> film.ActorListResponse
	19, // 28: film.filmRpc.SearchFilm:output_type -> film.SearchFilmResponse
	20, // 29: film.filmRpc.GetAllCategory:output_type -> film.GetCategoryListResponse
	23, // 30: film.filmRpc.GetCinemaFilm:output_type -> film.CinemaFilmResponse
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_film_proto_init() }
func file_film_proto_init() {
	if File_film_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_film_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Film); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilmDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmInfoUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilmSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminFilmListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilmSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Actor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFilmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFilmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CinemaFilmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CinemaFilmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CinemaFilm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_film_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_film_proto_goTypes,
		DependencyIndexes: file_film_proto_depIdxs,
		MessageInfos:      file_film_proto_msgTypes,
	}.Build()
	File_film_proto = out.File
	file_film_proto_rawDesc = nil
	file_film_proto_goTypes = nil
	file_film_proto_depIdxs = nil
}
