// Code generated by goctl. DO NOT EDIT!
// Source: film.proto

package server

import (
	"context"

	"MaoerMovie/service/film-rpc/internal/logic"
	"MaoerMovie/service/film-rpc/internal/svc"
	"MaoerMovie/service/film-rpc/types/pb"
)

type FilmRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedFilmRpcServer
}

func NewFilmRpcServer(svcCtx *svc.ServiceContext) *FilmRpcServer {
	return &FilmRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *FilmRpcServer) GetFilm(ctx context.Context, in *pb.FilmRequest) (*pb.GetFilmResponse, error) {
	l := logic.NewGetFilmLogic(ctx, s.svcCtx)
	return l.GetFilm(in)
}

func (s *FilmRpcServer) GetFilmDetail(ctx context.Context, in *pb.FilmRequest) (*pb.GetFilmDetailResponse, error) {
	l := logic.NewGetFilmDetailLogic(ctx, s.svcCtx)
	return l.GetFilmDetail(in)
}

func (s *FilmRpcServer) CreateFilm(ctx context.Context, in *pb.FilmCreateRequest) (*pb.FilmCreateResponse, error) {
	l := logic.NewCreateFilmLogic(ctx, s.svcCtx)
	return l.CreateFilm(in)
}

func (s *FilmRpcServer) UpdateFilm(ctx context.Context, in *pb.FilmUpdateRequest) (*pb.FilmResponse, error) {
	l := logic.NewUpdateFilmLogic(ctx, s.svcCtx)
	return l.UpdateFilm(in)
}

func (s *FilmRpcServer) DeleteFilm(ctx context.Context, in *pb.FilmRequest) (*pb.FilmResponse, error) {
	l := logic.NewDeleteFilmLogic(ctx, s.svcCtx)
	return l.DeleteFilm(in)
}

func (s *FilmRpcServer) AdminFilmList(ctx context.Context, in *pb.ListRequest) (*pb.AdminFilmListResponse, error) {
	l := logic.NewAdminFilmListLogic(ctx, s.svcCtx)
	return l.AdminFilmList(in)
}

func (s *FilmRpcServer) UpdateFilmInfo(ctx context.Context, in *pb.FilmInfoUpdateRequest) (*pb.FilmResponse, error) {
	l := logic.NewUpdateFilmInfoLogic(ctx, s.svcCtx)
	return l.UpdateFilmInfo(in)
}

func (s *FilmRpcServer) GetActorList(ctx context.Context, in *pb.ListRequest) (*pb.ActorListResponse, error) {
	l := logic.NewGetActorListLogic(ctx, s.svcCtx)
	return l.GetActorList(in)
}

func (s *FilmRpcServer) SearchFilm(ctx context.Context, in *pb.SearchFilmRequest) (*pb.SearchFilmResponse, error) {
	l := logic.NewSearchFilmLogic(ctx, s.svcCtx)
	return l.SearchFilm(in)
}

func (s *FilmRpcServer) GetAllCategory(ctx context.Context, in *pb.CommonRequest) (*pb.GetCategoryListResponse, error) {
	l := logic.NewGetAllCategoryLogic(ctx, s.svcCtx)
	return l.GetAllCategory(in)
}

func (s *FilmRpcServer) GetCinemaFilm(ctx context.Context, in *pb.CinemaFilmRequest) (*pb.CinemaFilmResponse, error) {
	l := logic.NewGetCinemaFilmLogic(ctx, s.svcCtx)
	return l.GetCinemaFilm(in)
}
