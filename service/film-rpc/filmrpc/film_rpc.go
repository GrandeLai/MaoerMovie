// Code generated by goctl. DO NOT EDIT!
// Source: film.proto

package filmrpc

import (
	"context"

	"MaoerMovie/service/film-rpc/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Actor                   = pb.Actor
	ActorListResponse       = pb.ActorListResponse
	AdminFilmListResponse   = pb.AdminFilmListResponse
	Category                = pb.Category
	CommonRequest           = pb.CommonRequest
	Film                    = pb.Film
	FilmCreateRequest       = pb.FilmCreateRequest
	FilmCreateResponse      = pb.FilmCreateResponse
	FilmDetail              = pb.FilmDetail
	FilmInfoUpdateRequest   = pb.FilmInfoUpdateRequest
	FilmPreview             = pb.FilmPreview
	FilmRequest             = pb.FilmRequest
	FilmResponse            = pb.FilmResponse
	FilmUpdateRequest       = pb.FilmUpdateRequest
	GetCategoryListResponse = pb.GetCategoryListResponse
	GetFilmDetailResponse   = pb.GetFilmDetailResponse
	GetFilmResponse         = pb.GetFilmResponse
	ListRequest             = pb.ListRequest
	SearchFilmRequest       = pb.SearchFilmRequest
	SearchFilmResponse      = pb.SearchFilmResponse
	UserFilmSearchRequest   = pb.UserFilmSearchRequest
	UserFilmSearchResponse  = pb.UserFilmSearchResponse

	FilmRpc interface {
		GetFilm(ctx context.Context, in *FilmRequest, opts ...grpc.CallOption) (*GetFilmResponse, error)
		GetFilmDetail(ctx context.Context, in *FilmRequest, opts ...grpc.CallOption) (*GetFilmDetailResponse, error)
		CreateFilm(ctx context.Context, in *FilmCreateRequest, opts ...grpc.CallOption) (*FilmCreateResponse, error)
		UpdateFilm(ctx context.Context, in *FilmUpdateRequest, opts ...grpc.CallOption) (*FilmResponse, error)
		DeleteFilm(ctx context.Context, in *FilmRequest, opts ...grpc.CallOption) (*FilmResponse, error)
		AdminFilmList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*AdminFilmListResponse, error)
		UpdateFilmInfo(ctx context.Context, in *FilmInfoUpdateRequest, opts ...grpc.CallOption) (*FilmResponse, error)
		GetActorList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ActorListResponse, error)
		SearchFilm(ctx context.Context, in *SearchFilmRequest, opts ...grpc.CallOption) (*SearchFilmResponse, error)
		GetAllCategory(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*GetCategoryListResponse, error)
	}

	defaultFilmRpc struct {
		cli zrpc.Client
	}
)

func NewFilmRpc(cli zrpc.Client) FilmRpc {
	return &defaultFilmRpc{
		cli: cli,
	}
}

func (m *defaultFilmRpc) GetFilm(ctx context.Context, in *FilmRequest, opts ...grpc.CallOption) (*GetFilmResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.GetFilm(ctx, in, opts...)
}

func (m *defaultFilmRpc) GetFilmDetail(ctx context.Context, in *FilmRequest, opts ...grpc.CallOption) (*GetFilmDetailResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.GetFilmDetail(ctx, in, opts...)
}

func (m *defaultFilmRpc) CreateFilm(ctx context.Context, in *FilmCreateRequest, opts ...grpc.CallOption) (*FilmCreateResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.CreateFilm(ctx, in, opts...)
}

func (m *defaultFilmRpc) UpdateFilm(ctx context.Context, in *FilmUpdateRequest, opts ...grpc.CallOption) (*FilmResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.UpdateFilm(ctx, in, opts...)
}

func (m *defaultFilmRpc) DeleteFilm(ctx context.Context, in *FilmRequest, opts ...grpc.CallOption) (*FilmResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.DeleteFilm(ctx, in, opts...)
}

func (m *defaultFilmRpc) AdminFilmList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*AdminFilmListResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.AdminFilmList(ctx, in, opts...)
}

func (m *defaultFilmRpc) UpdateFilmInfo(ctx context.Context, in *FilmInfoUpdateRequest, opts ...grpc.CallOption) (*FilmResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.UpdateFilmInfo(ctx, in, opts...)
}

func (m *defaultFilmRpc) GetActorList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ActorListResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.GetActorList(ctx, in, opts...)
}

func (m *defaultFilmRpc) SearchFilm(ctx context.Context, in *SearchFilmRequest, opts ...grpc.CallOption) (*SearchFilmResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.SearchFilm(ctx, in, opts...)
}

func (m *defaultFilmRpc) GetAllCategory(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*GetCategoryListResponse, error) {
	client := pb.NewFilmRpcClient(m.cli.Conn())
	return client.GetAllCategory(ctx, in, opts...)
}
